<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>challenge level 8</title>
      <link href="/blog/2018/07/05/python-challenge8/"/>
      <url>/blog/2018/07/05/python-challenge8/</url>
      <content type="html"><![CDATA[<h2 id="问题-http-www-pythonchallenge-com-pc-def-integrity-html"><a href="#问题-http-www-pythonchallenge-com-pc-def-integrity-html" class="headerlink" title="问题 http://www.pythonchallenge.com/pc/def/integrity.html"></a><a href="http://www.pythonchallenge.com/pc/def/integrity.html" target="_blank" rel="noopener">问题</a> <a href="http://www.pythonchallenge.com/pc/def/integrity.html" target="_blank" rel="noopener">http://www.pythonchallenge.com/pc/def/integrity.html</a></h2><h2 id="challenge-8-解答思路"><a href="#challenge-8-解答思路" class="headerlink" title="challenge 8 解答思路"></a>challenge 8 解答思路</h2><h3 id="Use-bz2"><a href="#Use-bz2" class="headerlink" title="Use bz2"></a>Use bz2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bz2</span><br><span class="line">name = bz2.decompress(<span class="string">b'BZh91AY&amp;SYA\xaf\x82\r\x00\x00\x01\x01\x80\x02\xc0\x02\x00 \x00!\x9ah3M\x07&lt;]\xc9\x14\xe1BA\x06\xbe\x084'</span>)</span><br><span class="line">psd = bz2.decompress(<span class="string">b'BZh91AY&amp;SY\x94$|\x0e\x00\x00\x00\x81\x00\x03$ \x00!\x9ah3M\x13&lt;]\xc9\x14\xe1BBP\x91\xf08'</span>)</span><br><span class="line">print(name)</span><br><span class="line">print(psd)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="BASH-Shell-Script"><a href="#BASH-Shell-Script" class="headerlink" title="BASH Shell Script"></a>BASH Shell Script</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">un=<span class="string">"<span class="variable">$(curl -s http://www.pythonchallenge.com/pc/def/integrity.html%7Csed -nE "/^un.*$/ s/^.*'(.*)</span>'.*$/\1/p"</span>)<span class="string">";</span></span><br><span class="line"><span class="string">pw="</span>$(curl -s http://www.pythonchallenge.com/pc/def/integrity.html%7Csed -nE <span class="string">"/^pw.*$/ s/^.*'(.*)'.*$/\1/p"</span>)<span class="string">";</span></span><br><span class="line"><span class="string">t=`mktemp`;</span></span><br><span class="line"><span class="string">for i in "</span><span class="variable">$un</span><span class="string">" "</span><span class="variable">$pw</span><span class="string">"; do</span></span><br><span class="line"><span class="string">        printf "</span><span class="variable">$i</span><span class="string">"&gt;<span class="variable">$t</span>;</span></span><br><span class="line"><span class="string">        bzcat <span class="variable">$t</span>;</span></span><br><span class="line"><span class="string">        echo;</span></span><br><span class="line"><span class="string">done;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> un: pw:; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="variable">$s</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">"`curl -s http://www.pythonchallenge.com/pc/def/integrity.html | grep <span class="variable">$s</span> | cut -d\' -f2`"</span> | bzcat</span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> code </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>challenge level 9</title>
      <link href="/blog/2018/07/05/python-challenge9/"/>
      <url>/blog/2018/07/05/python-challenge9/</url>
      <content type="html"><![CDATA[<h2 id="问题-http-www-pythonchallenge-com-pc-return-good-html"><a href="#问题-http-www-pythonchallenge-com-pc-return-good-html" class="headerlink" title="问题 http://www.pythonchallenge.com/pc/return/good.html"></a><a href="http://www.pythonchallenge.com/pc/return/good.html" target="_blank" rel="noopener">问题</a> <a href="http://www.pythonchallenge.com/pc/return/good.html" target="_blank" rel="noopener">http://www.pythonchallenge.com/pc/return/good.html</a></h2><h2 id="challenge-9-解答思路"><a href="#challenge-9-解答思路" class="headerlink" title="challenge 9 解答思路"></a>challenge 9 解答思路</h2><h3 id="Use-PIL"><a href="#Use-PIL" class="headerlink" title="Use PIL"></a>Use PIL</h3><p>The source file contains a list of numbers, and the title of the level suggests to interpret it as a list of dots.<br>Assuming you’ve loaded the lists into the variables “first” and “second” (I just used copy and paste from the page-source for that,and adding [ and ] of course), you only have to:<br><a id="more"></a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image,ImageDraw</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">first = [</span><br><span class="line"><span class="number">146</span>,<span class="number">399</span>,<span class="number">163</span>,<span class="number">403</span>,<span class="number">170</span>,<span class="number">393</span>,<span class="number">169</span>,<span class="number">391</span>,<span class="number">166</span>,<span class="number">386</span>,<span class="number">170</span>,<span class="number">381</span>,<span class="number">170</span>,<span class="number">371</span>,<span class="number">170</span>,<span class="number">355</span>,<span class="number">169</span>,<span class="number">346</span>,<span class="number">167</span>,<span class="number">335</span>,<span class="number">170</span>,<span class="number">329</span>,<span class="number">170</span>,<span class="number">320</span>,<span class="number">170</span>,</span><br><span class="line"><span class="number">310</span>,<span class="number">171</span>,<span class="number">301</span>,<span class="number">173</span>,<span class="number">290</span>,<span class="number">178</span>,<span class="number">289</span>,<span class="number">182</span>,<span class="number">287</span>,<span class="number">188</span>,<span class="number">286</span>,<span class="number">190</span>,<span class="number">286</span>,<span class="number">192</span>,<span class="number">291</span>,<span class="number">194</span>,<span class="number">296</span>,<span class="number">195</span>,<span class="number">305</span>,<span class="number">194</span>,<span class="number">307</span>,<span class="number">191</span>,<span class="number">312</span>,<span class="number">190</span>,<span class="number">316</span>,</span><br><span class="line"><span class="number">190</span>,<span class="number">321</span>,<span class="number">192</span>,<span class="number">331</span>,<span class="number">193</span>,<span class="number">338</span>,<span class="number">196</span>,<span class="number">341</span>,<span class="number">197</span>,<span class="number">346</span>,<span class="number">199</span>,<span class="number">352</span>,<span class="number">198</span>,<span class="number">360</span>,<span class="number">197</span>,<span class="number">366</span>,<span class="number">197</span>,<span class="number">373</span>,<span class="number">196</span>,<span class="number">380</span>,<span class="number">197</span>,<span class="number">383</span>,<span class="number">196</span>,<span class="number">387</span>,<span class="number">192</span>,</span><br><span class="line"><span class="number">389</span>,<span class="number">191</span>,<span class="number">392</span>,<span class="number">190</span>,<span class="number">396</span>,<span class="number">189</span>,<span class="number">400</span>,<span class="number">194</span>,<span class="number">401</span>,<span class="number">201</span>,<span class="number">402</span>,<span class="number">208</span>,<span class="number">403</span>,<span class="number">213</span>,<span class="number">402</span>,<span class="number">216</span>,<span class="number">401</span>,<span class="number">219</span>,<span class="number">397</span>,<span class="number">219</span>,<span class="number">393</span>,<span class="number">216</span>,<span class="number">390</span>,<span class="number">215</span>,<span class="number">385</span>,</span><br><span class="line"><span class="number">215</span>,<span class="number">379</span>,<span class="number">213</span>,<span class="number">373</span>,<span class="number">213</span>,<span class="number">365</span>,<span class="number">212</span>,<span class="number">360</span>,<span class="number">210</span>,<span class="number">353</span>,<span class="number">210</span>,<span class="number">347</span>,<span class="number">212</span>,<span class="number">338</span>,<span class="number">213</span>,<span class="number">329</span>,<span class="number">214</span>,<span class="number">319</span>,<span class="number">215</span>,<span class="number">311</span>,<span class="number">215</span>,<span class="number">306</span>,<span class="number">216</span>,<span class="number">296</span>,<span class="number">218</span>,</span><br><span class="line"><span class="number">290</span>,<span class="number">221</span>,<span class="number">283</span>,<span class="number">225</span>,<span class="number">282</span>,<span class="number">233</span>,<span class="number">284</span>,<span class="number">238</span>,<span class="number">287</span>,<span class="number">243</span>,<span class="number">290</span>,<span class="number">250</span>,<span class="number">291</span>,<span class="number">255</span>,<span class="number">294</span>,<span class="number">261</span>,<span class="number">293</span>,<span class="number">265</span>,<span class="number">291</span>,<span class="number">271</span>,<span class="number">291</span>,<span class="number">273</span>,<span class="number">289</span>,<span class="number">278</span>,<span class="number">287</span>,</span><br><span class="line"><span class="number">279</span>,<span class="number">285</span>,<span class="number">281</span>,<span class="number">280</span>,<span class="number">284</span>,<span class="number">278</span>,<span class="number">284</span>,<span class="number">276</span>,<span class="number">287</span>,<span class="number">277</span>,<span class="number">289</span>,<span class="number">283</span>,<span class="number">291</span>,<span class="number">286</span>,<span class="number">294</span>,<span class="number">291</span>,<span class="number">296</span>,<span class="number">295</span>,<span class="number">299</span>,<span class="number">300</span>,<span class="number">301</span>,<span class="number">304</span>,<span class="number">304</span>,<span class="number">320</span>,<span class="number">305</span>,</span><br><span class="line"><span class="number">327</span>,<span class="number">306</span>,<span class="number">332</span>,<span class="number">307</span>,<span class="number">341</span>,<span class="number">306</span>,<span class="number">349</span>,<span class="number">303</span>,<span class="number">354</span>,<span class="number">301</span>,<span class="number">364</span>,<span class="number">301</span>,<span class="number">371</span>,<span class="number">297</span>,<span class="number">375</span>,<span class="number">292</span>,<span class="number">384</span>,<span class="number">291</span>,<span class="number">386</span>,<span class="number">302</span>,<span class="number">393</span>,<span class="number">324</span>,<span class="number">391</span>,<span class="number">333</span>,<span class="number">387</span>,</span><br><span class="line"><span class="number">328</span>,<span class="number">375</span>,<span class="number">329</span>,<span class="number">367</span>,<span class="number">329</span>,<span class="number">353</span>,<span class="number">330</span>,<span class="number">341</span>,<span class="number">331</span>,<span class="number">328</span>,<span class="number">336</span>,<span class="number">319</span>,<span class="number">338</span>,<span class="number">310</span>,<span class="number">341</span>,<span class="number">304</span>,<span class="number">341</span>,<span class="number">285</span>,<span class="number">341</span>,<span class="number">278</span>,<span class="number">343</span>,<span class="number">269</span>,<span class="number">344</span>,<span class="number">262</span>,<span class="number">346</span>,</span><br><span class="line"><span class="number">259</span>,<span class="number">346</span>,<span class="number">251</span>,<span class="number">349</span>,<span class="number">259</span>,<span class="number">349</span>,<span class="number">264</span>,<span class="number">349</span>,<span class="number">273</span>,<span class="number">349</span>,<span class="number">280</span>,<span class="number">349</span>,<span class="number">288</span>,<span class="number">349</span>,<span class="number">295</span>,<span class="number">349</span>,<span class="number">298</span>,<span class="number">354</span>,<span class="number">293</span>,<span class="number">356</span>,<span class="number">286</span>,<span class="number">354</span>,<span class="number">279</span>,<span class="number">352</span>,<span class="number">268</span>,</span><br><span class="line"><span class="number">352</span>,<span class="number">257</span>,<span class="number">351</span>,<span class="number">249</span>,<span class="number">350</span>,<span class="number">234</span>,<span class="number">351</span>,<span class="number">211</span>,<span class="number">352</span>,<span class="number">197</span>,<span class="number">354</span>,<span class="number">185</span>,<span class="number">353</span>,<span class="number">171</span>,<span class="number">351</span>,<span class="number">154</span>,<span class="number">348</span>,<span class="number">147</span>,<span class="number">342</span>,<span class="number">137</span>,<span class="number">339</span>,<span class="number">132</span>,<span class="number">330</span>,<span class="number">122</span>,<span class="number">327</span>,</span><br><span class="line"><span class="number">120</span>,<span class="number">314</span>,<span class="number">116</span>,<span class="number">304</span>,<span class="number">117</span>,<span class="number">293</span>,<span class="number">118</span>,<span class="number">284</span>,<span class="number">118</span>,<span class="number">281</span>,<span class="number">122</span>,<span class="number">275</span>,<span class="number">128</span>,<span class="number">265</span>,<span class="number">129</span>,<span class="number">257</span>,<span class="number">131</span>,<span class="number">244</span>,<span class="number">133</span>,<span class="number">239</span>,<span class="number">134</span>,<span class="number">228</span>,<span class="number">136</span>,<span class="number">221</span>,<span class="number">137</span>,</span><br><span class="line"><span class="number">214</span>,<span class="number">138</span>,<span class="number">209</span>,<span class="number">135</span>,<span class="number">201</span>,<span class="number">132</span>,<span class="number">192</span>,<span class="number">130</span>,<span class="number">184</span>,<span class="number">131</span>,<span class="number">175</span>,<span class="number">129</span>,<span class="number">170</span>,<span class="number">131</span>,<span class="number">159</span>,<span class="number">134</span>,<span class="number">157</span>,<span class="number">134</span>,<span class="number">160</span>,<span class="number">130</span>,<span class="number">170</span>,<span class="number">125</span>,<span class="number">176</span>,<span class="number">114</span>,<span class="number">176</span>,</span><br><span class="line"><span class="number">102</span>,<span class="number">173</span>,<span class="number">103</span>,<span class="number">172</span>,<span class="number">108</span>,<span class="number">171</span>,<span class="number">111</span>,<span class="number">163</span>,<span class="number">115</span>,<span class="number">156</span>,<span class="number">116</span>,<span class="number">149</span>,<span class="number">117</span>,<span class="number">142</span>,<span class="number">116</span>,<span class="number">136</span>,<span class="number">115</span>,<span class="number">129</span>,<span class="number">115</span>,<span class="number">124</span>,<span class="number">115</span>,<span class="number">120</span>,<span class="number">115</span>,<span class="number">115</span>,<span class="number">117</span>,</span><br><span class="line"><span class="number">113</span>,<span class="number">120</span>,<span class="number">109</span>,<span class="number">122</span>,<span class="number">102</span>,<span class="number">122</span>,<span class="number">100</span>,<span class="number">121</span>,<span class="number">95</span>,<span class="number">121</span>,<span class="number">89</span>,<span class="number">115</span>,<span class="number">87</span>,<span class="number">110</span>,<span class="number">82</span>,<span class="number">109</span>,<span class="number">84</span>,<span class="number">118</span>,<span class="number">89</span>,<span class="number">123</span>,<span class="number">93</span>,<span class="number">129</span>,<span class="number">100</span>,<span class="number">130</span>,<span class="number">108</span>,<span class="number">132</span>,<span class="number">110</span>,</span><br><span class="line"><span class="number">133</span>,<span class="number">110</span>,<span class="number">136</span>,<span class="number">107</span>,<span class="number">138</span>,<span class="number">105</span>,<span class="number">140</span>,<span class="number">95</span>,<span class="number">138</span>,<span class="number">86</span>,<span class="number">141</span>,<span class="number">79</span>,<span class="number">149</span>,<span class="number">77</span>,<span class="number">155</span>,<span class="number">81</span>,<span class="number">162</span>,<span class="number">90</span>,<span class="number">165</span>,<span class="number">97</span>,<span class="number">167</span>,<span class="number">99</span>,<span class="number">171</span>,<span class="number">109</span>,<span class="number">171</span>,<span class="number">107</span>,<span class="number">161</span>,</span><br><span class="line"><span class="number">111</span>,<span class="number">156</span>,<span class="number">113</span>,<span class="number">170</span>,<span class="number">115</span>,<span class="number">185</span>,<span class="number">118</span>,<span class="number">208</span>,<span class="number">117</span>,<span class="number">223</span>,<span class="number">121</span>,<span class="number">239</span>,<span class="number">128</span>,<span class="number">251</span>,<span class="number">133</span>,<span class="number">259</span>,<span class="number">136</span>,<span class="number">266</span>,<span class="number">139</span>,<span class="number">276</span>,<span class="number">143</span>,<span class="number">290</span>,<span class="number">148</span>,<span class="number">310</span>,<span class="number">151</span>,</span><br><span class="line"><span class="number">332</span>,<span class="number">155</span>,<span class="number">348</span>,<span class="number">156</span>,<span class="number">353</span>,<span class="number">153</span>,<span class="number">366</span>,<span class="number">149</span>,<span class="number">379</span>,<span class="number">147</span>,<span class="number">394</span>,<span class="number">146</span>,<span class="number">399</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">second = [</span><br><span class="line"><span class="number">156</span>,<span class="number">141</span>,<span class="number">165</span>,<span class="number">135</span>,<span class="number">169</span>,<span class="number">131</span>,<span class="number">176</span>,<span class="number">130</span>,<span class="number">187</span>,<span class="number">134</span>,<span class="number">191</span>,<span class="number">140</span>,<span class="number">191</span>,<span class="number">146</span>,<span class="number">186</span>,<span class="number">150</span>,<span class="number">179</span>,<span class="number">155</span>,<span class="number">175</span>,<span class="number">157</span>,<span class="number">168</span>,<span class="number">157</span>,<span class="number">163</span>,<span class="number">157</span>,<span class="number">159</span>,</span><br><span class="line"><span class="number">157</span>,<span class="number">158</span>,<span class="number">164</span>,<span class="number">159</span>,<span class="number">175</span>,<span class="number">159</span>,<span class="number">181</span>,<span class="number">157</span>,<span class="number">191</span>,<span class="number">154</span>,<span class="number">197</span>,<span class="number">153</span>,<span class="number">205</span>,<span class="number">153</span>,<span class="number">210</span>,<span class="number">152</span>,<span class="number">212</span>,<span class="number">147</span>,<span class="number">215</span>,<span class="number">146</span>,<span class="number">218</span>,<span class="number">143</span>,<span class="number">220</span>,<span class="number">132</span>,<span class="number">220</span>,</span><br><span class="line"><span class="number">125</span>,<span class="number">217</span>,<span class="number">119</span>,<span class="number">209</span>,<span class="number">116</span>,<span class="number">196</span>,<span class="number">115</span>,<span class="number">185</span>,<span class="number">114</span>,<span class="number">172</span>,<span class="number">114</span>,<span class="number">167</span>,<span class="number">112</span>,<span class="number">161</span>,<span class="number">109</span>,<span class="number">165</span>,<span class="number">107</span>,<span class="number">170</span>,<span class="number">99</span>,<span class="number">171</span>,<span class="number">97</span>,<span class="number">167</span>,<span class="number">89</span>,<span class="number">164</span>,<span class="number">81</span>,<span class="number">162</span>,</span><br><span class="line"><span class="number">77</span>,<span class="number">155</span>,<span class="number">81</span>,<span class="number">148</span>,<span class="number">87</span>,<span class="number">140</span>,<span class="number">96</span>,<span class="number">138</span>,<span class="number">105</span>,<span class="number">141</span>,<span class="number">110</span>,<span class="number">136</span>,<span class="number">111</span>,<span class="number">126</span>,<span class="number">113</span>,<span class="number">129</span>,<span class="number">118</span>,<span class="number">117</span>,<span class="number">128</span>,<span class="number">114</span>,<span class="number">137</span>,<span class="number">115</span>,<span class="number">146</span>,<span class="number">114</span>,<span class="number">155</span>,<span class="number">115</span>,</span><br><span class="line"><span class="number">158</span>,<span class="number">121</span>,<span class="number">157</span>,<span class="number">128</span>,<span class="number">156</span>,<span class="number">134</span>,<span class="number">157</span>,<span class="number">136</span>,<span class="number">156</span>,<span class="number">136</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">img = Image.new(<span class="string">'RGB'</span>, (<span class="number">640</span>,<span class="number">480</span>))</span><br><span class="line">draw = ImageDraw.Draw(img)</span><br><span class="line">draw.line(first)</span><br><span class="line">draw.line(second)</span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure></p><h3 id="Complete-solution"><a href="#Complete-solution" class="headerlink" title="Complete solution"></a>Complete solution</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, re</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image,ImageDraw</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw_figure</span><span class="params">(coord_list, color)</span>:</span></span><br><span class="line">    coord_list = map(<span class="keyword">lambda</span> s: int(s), coord_list)</span><br><span class="line">    drawer.polygon(list(coord_list), outline=color)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">page = requests.get(<span class="string">'http://www.pythonchallenge.com/pc/return/good.html'</span>, auth=(<span class="string">'huge'</span>, <span class="string">'file'</span>)).text</span><br><span class="line"></span><br><span class="line">match = re.search(<span class="string">r'first:\n([\d,\n]+)\n\nsecond:\n([\d,\n]+)\n\n--&gt;'</span>, page)</span><br><span class="line">first, second = [match.group(i).replace(<span class="string">'\n'</span>, <span class="string">''</span>).split(<span class="string">','</span>) <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>]]</span><br><span class="line"></span><br><span class="line">im = Image.new(<span class="string">'RGB'</span>, (<span class="number">500</span>, <span class="number">500</span>))</span><br><span class="line">drawer = ImageDraw.Draw(im)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> arg <span class="keyword">in</span> [(first, <span class="string">'#ccc'</span>), (second, <span class="string">'#800'</span>)]:</span><br><span class="line">    draw_figure(*arg)</span><br><span class="line"></span><br><span class="line">im.save(<span class="string">'c9image.png'</span>, <span class="string">'PNG'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> code </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>challenge level 10</title>
      <link href="/blog/2018/06/28/python-challenge10/"/>
      <url>/blog/2018/06/28/python-challenge10/</url>
      <content type="html"><![CDATA[<h2 id="问题-http-www-pythonchallenge-com-pc-return-bull-html"><a href="#问题-http-www-pythonchallenge-com-pc-return-bull-html" class="headerlink" title="问题 http://www.pythonchallenge.com/pc/return/bull.html"></a><a href="http://www.pythonchallenge.com/pc/return/bull.html" target="_blank" rel="noopener">问题</a> <a href="http://www.pythonchallenge.com/pc/return/bull.html" target="_blank" rel="noopener">http://www.pythonchallenge.com/pc/return/bull.html</a></h2><h2 id="challenge-10-解答思路"><a href="#challenge-10-解答思路" class="headerlink" title="challenge 10 解答思路"></a>challenge 10 解答思路</h2><h3 id="Regular-Expression-Solutions"><a href="#Regular-Expression-Solutions" class="headerlink" title="Regular Expression Solutions"></a>Regular Expression Solutions</h3><p>Here’s a short &amp; sweet way to get the whole job done, exploiting that regexps have a natural way to say “find the longest sequence starting at the current position consisting of repetitions of the current digit”. The “(\d)” matches a digit as group #1, and the “\1” matches the same thing as group #1. Group #0, or m.group(0), is the entire string.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">describe</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>.join([str(len(m.group(<span class="number">0</span>))) + m.group(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> re.finditer(<span class="string">r"(\d)\1*"</span>, s)])</span><br><span class="line">s = <span class="string">"1"</span></span><br><span class="line"><span class="keyword">for</span> dummy <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">    s = describe(s)</span><br><span class="line"><span class="keyword">print</span> len(s)  <span class="comment"># prints 5808</span></span><br></pre></td></tr></table></figure></p><p>Here’s another version of the regular expression portion, broken into two lines. This shows there are multiple ways to write this, and usually a concise way without explicit for loops.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">describe</span><span class="params">(s)</span>:</span></span><br><span class="line">    sets = re.findall(<span class="string">"(1+|2+|3+)"</span>, s)  <span class="comment"># like "111", "2", ...</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>.join([str(len(x))+x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> sets])</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="List-and-reduce"><a href="#List-and-reduce" class="headerlink" title="List and reduce"></a>List and reduce</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">push_one</span><span class="params">(seq, newch)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(seq)==<span class="number">0</span> <span class="keyword">or</span> seq[<span class="number">-1</span>][<span class="number">0</span>]!=newch:</span><br><span class="line">        seq.append((newch,<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        seq[<span class="number">-1</span>]=(newch,seq[<span class="number">-1</span>][<span class="number">1</span>]+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> seq</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getnext</span><span class="params">(x)</span>:</span></span><br><span class="line">    next = reduce(push_one, [[]] + [c <span class="keyword">for</span> c <span class="keyword">in</span> x])</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>.join(map(<span class="keyword">lambda</span> pair: <span class="string">'%d%c'</span> % (pair[<span class="number">1</span>],pair[<span class="number">0</span>]), next))</span><br><span class="line"></span><br><span class="line">l=[]</span><br><span class="line">x=<span class="string">'1'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">40</span>):</span><br><span class="line">    l.append(x)</span><br><span class="line">    x = getnext(x)</span><br><span class="line"><span class="keyword">print</span> len(l[<span class="number">30</span>]) <span class="comment"># prints 5808</span></span><br></pre></td></tr></table></figure><h3 id="Solution-using-generators"><a href="#Solution-using-generators" class="headerlink" title="Solution using generators"></a>Solution using generators</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compress</span><span class="params">(g)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> key, subgenerator <span class="keyword">in</span> itertools.groupby(g):</span><br><span class="line">        <span class="keyword">yield</span> len(list(subgenerator))</span><br><span class="line">        <span class="keyword">yield</span> key</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mk_recurse_n</span><span class="params">(f, n)</span>:</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">(g)</span>:</span></span><br><span class="line">       <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">           g = f(g)</span><br><span class="line">       <span class="keyword">return</span> g</span><br><span class="line">   <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line">g = mk_recurse_n(compress, <span class="number">30</span>)([<span class="number">1</span>])</span><br><span class="line">a = list(g)</span><br><span class="line"><span class="keyword">print</span> len(a)</span><br></pre></td></tr></table></figure><h3 id="Other-solutions"><a href="#Other-solutions" class="headerlink" title="Other solutions"></a>Other solutions</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> groupby</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line">a = <span class="string">'1'</span></span><br><span class="line">b = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    k = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> j &lt; len(a):</span><br><span class="line">        <span class="keyword">while</span> k &lt; len(a) <span class="keyword">and</span> a[k] == a[j]:</span><br><span class="line">            k += <span class="number">1</span></span><br><span class="line">        b += str(k-j) + a[j]</span><br><span class="line">        j = k</span><br><span class="line">    a = b</span><br><span class="line">    b = <span class="string">''</span></span><br><span class="line">print(len(a))</span><br><span class="line"></span><br><span class="line">x = <span class="string">'1'</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">    x = <span class="string">""</span>.join([str(len(i + j)) + i <span class="keyword">for</span> i, j <span class="keyword">in</span> re.findall(<span class="string">r"(\d)(\1*)"</span>, x)])</span><br><span class="line">print(len(x))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y = <span class="string">'1'</span></span><br><span class="line"><span class="keyword">for</span> h <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">    y = <span class="string">""</span>.join([str(len(list(j))) + i <span class="keyword">for</span> i, j <span class="keyword">in</span> groupby(y)])</span><br><span class="line">print(len(y))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = len(reduce(<span class="keyword">lambda</span> m, n: reduce(<span class="keyword">lambda</span> u, v: u + str(len(list(v[<span class="number">1</span>]))) + v[<span class="number">0</span>], groupby(x), <span class="string">""</span>), range(<span class="number">30</span>), <span class="string">"1"</span>))</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> code </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>思路</title>
      <link href="/blog/2017/04/29/think-in-thinking/"/>
      <url>/blog/2017/04/29/think-in-thinking/</url>
      <content type="html"><![CDATA[<h2 id="基于一次python代码排错的思考"><a href="#基于一次python代码排错的思考" class="headerlink" title="基于一次python代码排错的思考"></a>基于一次python代码排错的思考</h2><h3 id="排错过程"><a href="#排错过程" class="headerlink" title="排错过程"></a>排错过程</h3><p>最近为了完成公司给的一个需求：写一个脚本把静态资源上传至七牛云，支持增量上传。这个问题不算太难，在七牛的官网有对应的sdk（<a href="https://developer.qiniu.com/kodo/sdk/1242/python" target="_blank" rel="noopener">七牛python-sdk文档</a>），于是自己先写了一个上传脚本，不是很满意，于是去网上找了看有没有写得好的上传工具。然后找到一个不错的脚本，于是开始在其基础上修改代码，实现了下载，上传（包括增量上传），刷新缓存，校对文件的功能，满足了工作中的需求。</p><a id="more"></a><p>后来在实际使用中发现一个bug，当上传的文件是更新文件时，会出现第一个文件可以上传，但是后面的文件代码会返回400的错误：</p><p><code>None exception:None, status_code:400, _ResponseInfo__response:&lt;Response [400]&gt;,text_body:, req_id:lCoAAIeThw9czLkU, error:unknown, x_log:body/request Content-Type isn&#39;t multi;UP/400</code></p><p>其实这个错误已经很明显了，问题就是出现在头信息上，但是习惯于Google的我并没有仔细思考错误就直接网上搜索各种解决办法，然后在官网看到400错误是指<strong>请求报文格式错误，报文构造不正确或者没有完整发送</strong>，其实这么一句话也能说明调用的接口传递的参数不对。由于没有排错经验的我，还是没有找到正确的处理方式，还是一味地去Google想看看能不能侥幸地找到答案，然而Google这次没能帮到我。如果我不解决这个问题，那么我的脚本就存在一个致命的问题，我需要把七牛存在的文件删除之后才能正确上传，显然不能容忍这个情况。那就必须解决问题，于是开始了调试过程，使用七牛的测试空间不停调试。首先从脚本开始排错，把上传接口返回的信息都打印出来。当时奇怪的问题是：在同一个for循环中，第一个上传更新可以正确返回，但是后面的上传更新都返回400，每次执行脚本都是这样。当时觉得很奇怪，在同一个for循环怎么可能出现不同的结果，查看了自己的代码，更新文件的逻辑就比上传的逻辑多了一个文件hash值得判断。看了取hash值的这块逻辑发现和更新和上传没什么关系。所以判断我上传和更新是一样的，于是我开始怀疑sdk是否有问题，因为是报的http的错误，而http的请求都是封装在sdk中的。于是又去官网下载了python-sdk的源码开始排错，各种调试，看到底是哪个地方没有传对参数。</p><p>由于自己的python功力不太好，看起源码来还是很吃力的，但是没办法需要慢慢排查，打印各种信息和官网给的数据格式对比，发现并没什么异常。后来我抛开其他信息，只看源码。</p><p>我把http的post接口数据全部打印出来，我想分析for循环第一个值和其他值到底有何不同。果然我在post接口数据中发现了headers这个参数不一致，第一个值没有<code>{&#39;Content-Type&#39;: &#39;application/json&#39;}</code>，而后面的值都有这个头信息，所以问题找到了，和报错一致。紧接着分析是在什么地方传入了这个头信息，我发现我调用上传接口之后紧接着调用了清除缓存的接口，而在清除缓存的接口给头信息添加了这个头。但是上传和清除缓存是调用的不同的函数，怎么会把头信息加到上传接口呢？进一步分析发现headers是一个全局的字典，但是我看了函数中是使用了copy的，因此不存在修改元数据的情况。这一点让我百思不得其解，然后我又去服务器上看了python的模块，突然发现模块里面没有加copy。一切都迎刃而解，最终原因是pip安装的库和七牛官网提供的源码不一致，pip安装的库少了copy。</p><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><p>如果对于一个开发高手来说，也许很快就能定位到问题。但是对于我这个运维人员来说，并没有形成开发思维，也没有形成系统的bug解决思维。再加上自己太过依赖Google，所以这个问题浪费了我一天的时间，最终得到解决。这让我明白，解决问题的思路的正确性多么重要。漫无目的在海量的Google页面搜索不会提高解决问题的速度，反而陷入困境之中。得到错误之后应该从错误入手，不要想当然的认为其他哪里有问题。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这让我明白，思维对于一个技术人员是多么的重要，要敢于相信自己，依靠自己的能力解决问题，不要一味地依赖外部的帮助。做人也是一样的，只有自己强大了，才能游刃有余，处之泰然。之所以高手都是大隐隐于市，浮躁不能解决任何问题。</p>]]></content>
      
      <categories>
          
          <category> 随文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>初心</title>
      <link href="/blog/2017/04/21/initial-reason/"/>
      <url>/blog/2017/04/21/initial-reason/</url>
      <content type="html"><![CDATA[<h2 id="复杂的世界终将不会扰乱坚定的内心"><a href="#复杂的世界终将不会扰乱坚定的内心" class="headerlink" title="复杂的世界终将不会扰乱坚定的内心"></a>复杂的世界终将不会扰乱坚定的内心</h2><h3 id="而立之前"><a href="#而立之前" class="headerlink" title="而立之前"></a>而立之前</h3><blockquote><p>回望过去的时间，不觉岁月匆匆</p></blockquote><p>生在21世纪，互联网高速发展的时代，网络已经帮助我们完成了很多纷繁复杂的难事。手机的使用更是占据了我们每天相当多的时间，现在的时代不再是儿时还不厌其烦的收集各种零碎物品的时代，更多的时间是用在和网上同事，朋友沟通交流，却是很少和最亲近的人一起喝杯茶聊聊家常。不得不说，将要30的我还在异国他乡，就连想去做别人忽视的东西的资格都没有，更何况自己也还在不断地忽视。在2017年的2月，我做了一件人生中很大的一次决定，背上行李，去往了我从未想象过的远方。想想自己是幸福的，在很多人在我这个年龄还说自己是单身狗的时候，我已成家，我有一个很爱我的老婆。临行前我是那么的不舍，应该说是临走前的两个月我都一直在纠结，是不是确定要去那个远方。对我来说，这两个月发生了很多事，工作的更换，亲人的变故，事业的瓶颈。。。。但我知道我必须要前行，因为身上背负的不仅仅是行李，还有未来。其实在之前的工作我并不想放弃，因为有很多同事值得我珍惜，无赖人生就是这么的奇妙，总会在你最安静的时候内心开始澎湃。我是一个什么样的人。。。我是一个想要抓住机会的人。</p><p>既然来到了这个我不曾想过的远方，多少还是有些感伤，毕竟一个人，一个箱。好在我是幸运的，网络给了我很大安慰，抵达目的地，就和自己的亲人爱人朋友报了平安，晚上应该是没睡好，但第二天又必须重拾心情，迎接新的生活。就这样已经在远方生活了两个月，一切还算顺畅，最主要的还是想念，她。</p><p>有时候总觉得自己是在逃避什么，估计是觉得对老婆的亏欠，让她一个人留在国内，我却一个人逍遥，呵呵。个中苦楚只有自己明白吧，别无他念，已经做出的决定就应该坚定地走下去，我相信她会理解我，因为我认为我所做的正是我们现在需要的。就不再过多描述自己现在的生活，我只想说，一切安好，明天会更好。</p><p>这段时间自己的想法有很多，外面的世界也千奇百怪，身边的朋友也在变化，有的越来越优秀，有的越来越远，有的也越来越不懂。还是那句老话，这些种种都是过客，能够相遇一天是开心，能够相知一月是庆幸，能够相识一年那一定要知足。唯有自己的心需要前行，还不知道会看到的是什么，不一定很期待，也不一定很倒霉，但一定要知道谁才值得去爱，什么事才值得去做。</p><a id="more"></a><h3 id="回首加冠"><a href="#回首加冠" class="headerlink" title="回首加冠"></a>回首加冠</h3><blockquote><p>最有创造力的时候，我做了些什么</p></blockquote><p>除了童年的时光应该没有什么时候比这段时间更轻松的了。大学四年的时光应该是美好的，还能将就的学业，美好的爱情，懵懂的事业，哈哈，真心让人留恋。应该来说，最有意义的事就是遇到了她，谁说大学毕业季就是分手季，我有力的反驳了这一观点，毕竟我也是不容易服输的人，经常还钻牛角尖，其实现在也钻牛角，不过现在好了很多，因为心态越来越好，相信很多事情放平心态慢慢都能找到很好的处理方法，不必急于一时，这就是所谓的<strong>稳</strong>。大学里当然还是有很多遗憾：没能在学校里大放异彩，没能考上研究生，甚至毕业时没能选好一个人生的方向。对于这些遗憾，也许终究是遗憾了，但自己也不能就此堕落，应该重拾信心，希望在这条走偏的路上绽放光芒。虽然现在还在为生活而奔波，那不也是为了他们脸上的笑容吗？在大学时代，我还曾经看过各种科学书籍，想要参加各种比赛，只能说都没有坚持下来。而是被那时候一个网络产物给迷惑了，那就是电脑（想想现在的自己，每天面对这电脑工作，当初是什么样的毅力让自己每天熬夜玩电脑的）。大二就有了自己的电脑，还是当初父母给的5000元带我去电脑城买的，现在回想起当初父母的眼神，5000对我来说当初也就是一个玩具，而对他们来说意味着什么。以后换做是我的儿子或者女儿这样的要求或许我就能明白。总之买了不能不用，也正是这个电脑我开始接触了以前没有接触过的东西（那之前敲过的键盘次数都可以数清），那时候我一直认为我自己学习硬件比学习软件轻松，奈何我现在从事的是软件工作，想想也很是搞笑。那时候的电路，光波什么的还是学习的很好，可惜现在还给老师了。</p><p>大学的时候也有一个比较重要的决定，那就是考研。想想当初学习还是不错的，奈何还是不够坚持，没能有更好的学业保研。从此踏上了为期几个月的考研路（其实也是耍耍哒哒，没有非常用心）。最后的结局同样和我大学的学业一样没能坚持，无奈需要面临寻找工作的压力之中。所以从这件事中我也总结了经验，任何事开始认真很容易，贵在坚持。因为有这样的经历，所以误打误撞来到了IT行业，也不知是庆幸还是苦逼，哈哈，这些每个人自己体会吧，相信每一个人对自己的职业都有自己的理解。我想说的是我很庆幸来到了这个行业，我不想做复杂的人际交往，我想做的事面对机器就能搞定很多事情。</p><h3 id="青春年少"><a href="#青春年少" class="headerlink" title="青春年少"></a>青春年少</h3><blockquote><p>我把整个青春都给了学习，我得到了什么</p></blockquote><p>还没有小孩，还不能体会现在的孩子读书是个什么情况。反正我整个青春都赌上了，看了上面的描述，大家也能明白这场赌注的输赢。初中到高中，自己一直是个乖孩子，学习优秀，全部心思都在学业上，没有谈过恋爱，没有抽过烟，没有打过架，没有去过网吧。唯一的陪伴就是作业，哈哈，真是精神粮食啊。最自豪的是初中，最难受的是高中。初中一直是拔尖的学生，做什么都认真负责，老师也很喜欢，典型的别人家的孩子，到了高中，优秀的学生越来越多，自己也很优秀，但是不在是老师唯一看中的学生，在最优秀的班级里，成绩是在班上中下，想想那时多大的压力。就这样，噩梦般的经历，现在有时候还做梦自己在考试，也许那时候的自己才是最坚强的，抗住了所有的压力，最后去了还算不错的大学。</p><p>所以，现在还时不时在想当初那么执着，是否值得。看到网上说谁初中辍学然后有了什么门道最后致富什么的，再看看自己，有时候确实惭愧。每个人的经历不同，网上说的别人确实成功了，但是他也许经历的痛苦是我的十倍或是更多。没有什么值不值，因为已经做了，我也不能再去纠结，想想它给了我什么。我在这么青春的年纪承受了别成人还要巨大的压力，我想这一点对我今后的发展也足够了，</p>]]></content>
      
      <categories>
          
          <category> 随文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人生 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/2017/04/20/hello-world/"/>
      <url>/blog/2017/04/20/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> deploy </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>王者荣耀攻略</title>
      <link href="/blog/2017/04/19/Glory_of_the_king/"/>
      <url>/blog/2017/04/19/Glory_of_the_king/</url>
      <content type="html"><![CDATA[]]></content>
      
      <categories>
          
          <category> 游戏攻略 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 王者荣耀 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
